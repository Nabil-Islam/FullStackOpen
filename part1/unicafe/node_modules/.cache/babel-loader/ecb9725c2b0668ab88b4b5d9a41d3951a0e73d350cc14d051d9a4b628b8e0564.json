{"ast":null,"code":"var _jsxFileName = \"/Users/nabilislam/Documents/FullStack-Open/FullStackOpen/part1/unicafe/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Title = props => {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = Title;\nconst Button = _ref => {\n  let {\n    handleClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Button;\nconst Heading = props => {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n};\n_c3 = Heading;\nconst Statisctic = _ref2 => {\n  let {\n    text\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [text, \" \", number]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c4 = Statisctic;\nconst App = () => {\n  _s();\n  // Initialise state hooks to keep track of states of good, neutral and bad counters\n\n  const [good, SetGood] = useState(0);\n  const [neutral, SetNeutral] = useState(0);\n  const [bad, SetBad] = useState(0);\n  const [average, SetAverage] = useState(0);\n  const positiveVotes = 0;\n\n  // Initialises trackers with suffix \"-T\" to calculate weights of the total votes of each type\n  // Good votes are weighted by +1, neutral votes are voted with 0 and bad votes are weighted with -1 \n  const goodT = good;\n  const neutralT = neutral * 0;\n  const badT = bad * -1;\n  const handleGoodClick = () => {\n    SetGood(good + 1);\n  };\n  const handleBadClick = () => {\n    SetBad(bad + 1);\n  };\n  const handleNeutralClick = () => {\n    SetNeutral(neutral + 1);\n  };\n  const calculateAverage = () => {\n    average = SetAverage((goodT + neutralT + badT) / 3);\n  };\n  const calculatePositive = () => {\n    positiveVotes = good / (good + neutral + bad);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      text: \"Please provide feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleGoodClick,\n      text: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleNeutralClick,\n      text: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleBadClick,\n      text: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      text: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statisctic, {\n      text: \"Good\",\n      number: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statisctic, {\n      text: \"Neutral\",\n      number: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statisctic, {\n      text: \"Bad\",\n      number: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statisctic, {\n      text: \"Average\",\n      number: average\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statisctic, {\n      text: \"Positive\",\n      number: positiveVotes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ngiCGxYPbBst1R8A2Se+QX+F9yk=\");\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Heading\");\n$RefreshReg$(_c4, \"Statisctic\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Title","props","console","log","children","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","Button","_ref","handleClick","onClick","_c2","Heading","_c3","Statisctic","_ref2","number","_c4","App","_s","good","SetGood","neutral","SetNeutral","bad","SetBad","average","SetAverage","positiveVotes","goodT","neutralT","badT","handleGoodClick","handleBadClick","handleNeutralClick","calculateAverage","calculatePositive","_c5","$RefreshReg$"],"sources":["/Users/nabilislam/Documents/FullStack-Open/FullStackOpen/part1/unicafe/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Title = (props) => {\n  console.log(props)\n  return (\n    <h1>{props.text}</h1>\n  )\n}\n\nconst Button = ({handleClick, text}) => {\n  return (\n    <button onClick = {handleClick}>\n      {text}\n    </button>\n  )\n}\n\nconst Heading = (props) => {\n  console.log(props)\n  return (\n      <h2>{props.text}</h2>\n    )\n}\n\nconst Statisctic = ({text}) => {\n  return (\n    <p>{text} {number}</p>\n  )\n}\n\nconst App = () => {\n\n  // Initialise state hooks to keep track of states of good, neutral and bad counters\n\n  const [good, SetGood] = useState(0)\n  const [neutral, SetNeutral] = useState(0)\n  const [bad, SetBad] = useState(0)\n  const [average, SetAverage] = useState(0)\n\n  const positiveVotes = 0\n\n  // Initialises trackers with suffix \"-T\" to calculate weights of the total votes of each type\n  // Good votes are weighted by +1, neutral votes are voted with 0 and bad votes are weighted with -1 \n  const goodT = good \n  const neutralT = neutral * 0 \n  const badT = bad * -1 \n\n  const handleGoodClick = () => {\n    SetGood(good + 1)\n  }\n\n  const handleBadClick = () => {\n    SetBad(bad + 1)\n  }\n\n  const handleNeutralClick = () => {\n    SetNeutral (neutral + 1)\n  }\n\n  const calculateAverage = () => {\n    average = SetAverage((goodT + neutralT + badT)/3)\n  }\n\n  const calculatePositive = () => {\n    positiveVotes = good / (good + neutral + bad)\n  }\n\n\n\n  return (\n    <div>\n      <Title text = 'Please provide feedback'/>\n      <Button handleClick = {handleGoodClick} text = 'Good'/>\n      <Button handleClick = {handleNeutralClick} text = 'Neutral'/>\n      <Button handleClick = {handleBadClick} text = 'Bad'/>\n      <Heading text = 'Statistics'/>\n      <Statisctic text = 'Good' number = {good}/>\n      <Statisctic text = 'Neutral' number = {neutral}/>\n      <Statisctic text = 'Bad' number = {bad} />\n      <Statisctic text = 'Average' number = {average} />\n      <Statisctic text= 'Positive' number = {positiveVotes} />\n    </div>\n    \n  )\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}